{
  "swagger": "2.0",
  "info": {
    "version": "1.0",
    "title": "AnserBizSOL API(サンプル版)",
    "description": "※本インターフェース仕様はサンプル版となります。\n\n本サービスでは、金融機関の設定や利用者の利用状況によって特定の項目の返却値が存在しない場合がある。  \n返却値が存在しない場合、一律Nullを返却する。  \nまた繰り返し項目が0件の場合、空の配列を返却する。\n"
  },
  "basePath": "/bizsol/v1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/banks/{bank_code}/oauth/auth": {
      "get": {
        "tags": [
          "OAuth"
        ],
        "summary": "リダイレクト（認証）",
        "description": "利用者に認証・認可を求め、認可の結果を受け取る。  \n",
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "name": "response_type",
            "in": "query",
            "description": "認証処理フロータイプ  \n「code」を設定  \n",
            "required": true,
            "type": "string",
            "x-format": "英字",
            "enum": [
              "code"
            ]
          },
          {
            "$ref": "#/parameters/clientIDQueryParam"
          },
          {
            "in": "query",
            "name": "redirect_uri",
            "description": "コールバックURL  \n",
            "required": true,
            "type": "string",
            "x-format": "英数字記号",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "in": "query",
            "name": "state",
            "description": "ステート  \n認可レスポンスで返却する値（折り返し情報）を設定。  \n利用者による認可が得られた場合、ステートをAPI連携事業者に返却する。  \nAPI連携事業者はAPI連携認証リクエスト時に送信したステートと同一か確認する。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "in": "query",
            "name": "service_level",
            "description": "サービスレベル  \n金融機関申込み時の画面表示パターンを設定。  \n金融機関申込番号：申00043～47  \n※ただし、金融機関申込み時の画面表示パターンの摘要タイミング（金融機関申込番号：申01235）で  \n  「ログイン画面から画面表示パターンを利用する」が選択されている場合のみ設定  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 1
          },
          {
            "in": "query",
            "name": "permission_type",
            "description": "認可区分  \n認可対象業務の区分を設定。  \nON_SERVICE_SELECT：認可業務指定あり  \nOFF_SERVICE_SELECT：認可業務指定なし  \nスコープの設定内容から利用者が業務選択を可能とする場合、ON_SERVICE_SELECT（認可業務指定あり）を設定。  \nスコープの設定内容から利用者が業務選択を可能としない場合、OFF_SERVICE_SELECT（認可業務指定なし）を設定。  \n※scopeの設定内容に応じて認可業務選択画面への遷移を判定する。  \n  scopeに「submissions」のみ指定された場合、認可区分の設定は無視し、認可業務選択画面へは遷移しない。  \n  scopeに「submissions」と「submissions」以外が混在して指定された場合、「submissions」の指定は無効とする。  \n  「submissions」以外を有効とする為、認可区分の設定に応じて認可業務選択画面への遷移を判定する。  \n  scopeが設定されなかった場合、デフォルトの「accounts」指定とみなされる為、認可区分の設定に応じて認可業務選択画面への遷移を判定する。  \n",
            "required": true,
            "type": "string",
            "enum": [
              "ON_SERVICE_SELECT",
              "OFF_SERVICE_SELECT"
            ]
          },
          {
            "in": "query",
            "name": "scope",
            "description": "スコープ  \nアクセス可能な機能に制限を設けるために以下を設定。  \n・accounts（照会系）  \n・transfers（振込系）  \n・submissions（承認系）  \n複数業務を設定する場合は、半角スペース区切りとする。また、設定値の順序に関係は無い。  \n未指定の場合は、「accounts」を設定した場合と同じ動きとなる。\n",
            "required": false,
            "type": "string",
            "x-format": "英数字"
          }
        ],
        "responses": {
          "302": {
            "description": "Found",
            "headers": {
              "Location": {
                "description": "利用者が認可した場合は、「 {コールバックURL}?code={認可コード}&state={ステート}」が設定されます。  \n利用者が操作を中止した場合や、なんらかの異常が発生した場合は、「 {コールバックURL}?error={エラーコード}&error_description={エラー内容}&state={ステート}」が設定されます。\n",
                "type": "string"
              }
            }
          }
        }
      }
    },
    "/banks/{bank_code}/oauth/token": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "アクセストークン取得・再発行",
        "description": "アクセストークン発行の要求、または再発行の要求を行う。",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBasic"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n認可グラントタイプにauthorization_code選択時は「DIRECT-API-00001」を  \n暗号化キーで暗号化した値を設定。  \nrefresh_token設定時は「DIRECT-API-00002」を暗号化キーで暗号化した値を設定。  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "in": "formData",
            "name": "grant_type",
            "description": "認可グラントタイプ  \nauthorization_code設定時はアクセストークンを発行し、  \nrefresh_token設定時はアクセストークンを再発行する。  \n",
            "required": true,
            "type": "string",
            "x-format": "英字記号",
            "enum": [
              "authorization_code",
              "refresh_token"
            ]
          },
          {
            "in": "formData",
            "name": "code",
            "description": "認可コード  \nリダイレクト（認証）のレスポンスの認可コードを設定。  \n認可グラントタイプにauthorization_code選択時は必須とする。  \n認可グラントタイプにrefresh_token選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          },
          {
            "in": "formData",
            "name": "redirect_uri",
            "description": "コールバックURL  \nリダイレクト（認証）電文で指定したコールバックＵＲＬ。  \n認可グラントタイプにauthorization_code選択時は必須とする。  \n認可グラントタイプにrefresh_token選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号",
            "minLength": 1,
            "maxLength": 256
          },
          {
            "in": "formData",
            "name": "access_token",
            "description": "アクセストークン  \nアクセストークン取得・再発行のレスポンスのアクセストークンを設定。  \n認可グラントタイプにrefresh_token選択時は必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          },
          {
            "in": "formData",
            "name": "refresh_token",
            "description": "リフレッシュトークン  \nアクセストークン取得・再発行のレスポンスのリフレッシュトークンを設定。  \n認可グラントタイプにrefresh_token選択時は必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          },
          {
            "in": "formData",
            "name": "company_code",
            "description": "企業コード  \n旧APIのアクセストークン取得のレスポンスの企業コードを設定。  \n認可グラントタイプにrefresh_token選択時は契約者通番が設定されていない場合は  \n必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 12,
            "maxLength": 20
          },
          {
            "in": "formData",
            "name": "user_code",
            "description": "利用者コード  \n旧APIのアクセストークン取得のレスポンスの利用者コードを設定。  \n認可グラントタイプにrefresh_token選択時は契約者通番が設定されていない場合は  \n必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 4,
            "maxLength": 12
          },
          {
            "in": "formData",
            "name": "contractor_id",
            "description": "契約者通番  \nアクセストークン取得・再発行のレスポンスの契約者通番を設定。  \n認可グラントタイプにrefresh_token選択時は企業コード、利用者コードのいずれかが  \n設定されていない場合は必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          },
          {
            "in": "formData",
            "name": "auto_manual_mode",
            "description": "自動手動モード  \n利用者の操作契機で電文の送信が行なわれる場合は「manual:手動」を設定し、   \nそれ以外の場合は「auto:自動」を設定  \n認可グラントタイプにrefresh_token選択時は必須とする。  \n認可グラントタイプにauthorization_code選択時は設定しない。  \n",
            "required": false,
            "type": "string",
            "x-format": "英字",
            "enum": [
              "auto",
              "manual"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "access_token": {
                  "type": "string",
                  "example": "7d0e8fddb23a40a2b5f73c2771e9c4c7",
                  "description": "アクセストークン  \n",
                  "x-nullable": false,
                  "x-format": "英数字",
                  "minLength": 32,
                  "maxLength": 32
                },
                "token_type": {
                  "type": "string",
                  "example": "Bearer",
                  "description": "トークンタイプ  \n「Bearer」のみ設定  \n",
                  "enum": [
                    "Bearer"
                  ],
                  "x-nullable": false,
                  "x-format": "英字"
                },
                "expires_in": {
                  "type": "integer",
                  "example": 900,
                  "description": "アクセストークン有効期間  \nアクセストークンの有効期間（秒数）を設定  \n",
                  "x-nullable": false,
                  "minLength": 1,
                  "maxLength": 8
                },
                "refresh_token": {
                  "type": "string",
                  "example": "ca5723130d3042eea0a6e6b7a97d0455",
                  "description": "リフレッシュトークン  \n",
                  "x-nullable": false,
                  "x-format": "英数字",
                  "minLength": 32,
                  "maxLength": 32
                },
                "main_account": {
                  "type": "string",
                  "example": "115199999999",
                  "description": "代表口座情報  \n代表口座情報を（支店コード、預金種目コード、口座番号を連結した値）を取得する。  \n認可グラントタイプにauthorization_code選択時は必須とする。  \nrefresh_token選択時はパラメータごと削除。  \n",
                  "x-nullable": true,
                  "minLength": 6,
                  "maxLength": 12
                },
                "contractor_id": {
                  "type": "string",
                  "example": "0000000000000000AG0123456789A001",
                  "description": "契約者通番  \n",
                  "x-nullable": false,
                  "x-format": "英数字",
                  "minLength": 32,
                  "maxLength": 32
                },
                "refresh_token_limit_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-12-12",
                  "description": "リフレッシュトークン有効期限  \nリフレッシュトークンの有効期限(日)をYYYY-MM-DD形式で設定  \n認可グラントタイプにauthorization_code選択時は必須とする。  \nrefresh_token選択時はパラメータごと削除。  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "balance_inquiry_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "残高照会認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transactions_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "入出金明細照会（ANSER）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transactions_jba_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "入出金明細照会（全銀）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "deposit_transactions_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "振込入金明細照会（ANSER）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "deposit_transactions_jba_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "振込入金明細照会（全銀）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "振込振替認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "bulk_transfer_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "総合振込認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "payroll_transfer_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "給与・賞与振込認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類１認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10857  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類２認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10858  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類３認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10859  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類４認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10860  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類５認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10861  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（振込振替）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "bulk_transfer_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（総合振込）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "payroll_transfer_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（給与・賞与振込）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類１）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10857  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類２）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10858  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類３）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10859  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類４）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10860  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_status_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類５）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10861  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（振込振替）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "bulk_transfer_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（総合振込）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "payroll_transfer_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（給与・賞与振込）認可状態  \nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類１）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10857  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類２）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10858  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類３）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10859  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類４）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10860  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_approval_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類５）認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10861  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_result_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類１結果照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10857  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_result_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類２結果照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10858  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_result_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類３結果照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10859  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_result_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類４結果照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10860  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_result_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類５結果照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10861  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_fee_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類１手数料照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10857  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_fee_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類２手数料照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10858  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_fee_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類３手数料照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10859  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_fee_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類４手数料照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10860  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_fee_permission_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類５手数料照会認可状態  \n画面に表示している業務名との紐付けは下記金融機関申込みを参照  \n金融機関申込番号：申10861  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n\nOFF：利用しない  \nON ：利用する  \n",
                  "x-nullable": false,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/banks/{bank_code}/oauth/revoke": {
      "post": {
        "tags": [
          "OAuth"
        ],
        "summary": "トークン失効",
        "description": "トークン失効の要求を行う。",
        "consumes": [
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBasic"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n「DIRECT-API-00006」を暗号化キーで暗号化した値を設定  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "in": "formData",
            "name": "client_id",
            "description": "クライアント識別子  \nAPI利用事業者を識別するＩＤを設定  \n",
            "required": true,
            "type": "string",
            "x-format": "英数字",
            "minLength": 8,
            "maxLength": 8
          },
          {
            "in": "formData",
            "name": "contractor_id",
            "description": "契約者通番  \nアクセストークン取得・再発行のレスポンスの契約者通番を設定。  \n",
            "required": true,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          },
          {
            "in": "formData",
            "name": "token",
            "description": "トークン  \nアクセストークン取得・再発行のレスポンスのアクセストークンまたはリフレッシュトークンを設定。  \n削除対象のアクセストークンもしくはリフレッシュトークンを設定。  \n",
            "required": true,
            "type": "string",
            "x-format": "英数字",
            "minLength": 32,
            "maxLength": 32
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/BadRequestResponse"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/ForbiddenResponse"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/InternalServerErrorResponse"
            }
          }
        }
      }
    },
    "/banks/{bank_code}/corporations": {
      "get": {
        "tags": [
          "corporations"
        ],
        "summary": "企業情報照会",
        "description": "資金移動に必要な情報（承認パターン、承認者情報、その他の設定内容）を取得する。  \n資金移動APIの実行前に実行すること。  \n",
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBearer"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n「DIRECT-API-00004」を暗号化キーで暗号化した値を設定  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "$ref": "#/parameters/clientIDQueryParam"
          },
          {
            "$ref": "#/parameters/contractorIdQueryParam"
          },
          {
            "$ref": "#/parameters/autoManualModeQueryParam"
          },
          {
            "in": "query",
            "name": "target_service",
            "description": "対象業務  \n資金移動を実施する対象業務を設定。  \nアクセストークン取得・再発行のレスポンスの認可状態がONである業務を設定可能。  \n10：振込振替  \n20：総合振込  \n21：給与振込  \n22：賞与振込  \n23：口座振替種類１  \n24：口座振替種類２  \n25：口座振替種類３  \n26：口座振替種類４  \n27：口座振替種類５  \n",
            "required": true,
            "type": "string",
            "enum": [
              "10",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27"
            ]
          },
          {
            "name": "account_id",
            "in": "query",
            "description": "口座識別子  \n利用者情報照会のレスポンスの口座識別子を設定。  \n出金口座情報を設定。  \nSMBCのみ設定。  \n",
            "required": false,
            "type": "string",
            "minLength": 13,
            "maxLength": 13
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "target_service": {
                  "type": "string",
                  "example": "10",
                  "description": "対象業務  \n対象の業務を設定  \n10：振込振替  \n20：総合振込  \n21：給与振込  \n22：賞与振込  \n23：口座振替種類１  \n24：口座振替種類２  \n25：口座振替種類３  \n26：口座振替種類４  \n27：口座振替種類５  \n",
                  "x-nullable": false,
                  "enum": [
                    "10",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27"
                  ]
                },
                "approval_pattern_type": {
                  "type": "string",
                  "example": "1",
                  "description": "承認パターン区分  \n承認方式を設定  \n0：承認なし（振込振替のみ）  \n1：シングル承認  \n2：ダブル承認（順序あり）  \n3：ダブル承認（順序なし）  \n4：シングル承認＋ダブル承認  \n",
                  "x-nullable": false,
                  "enum": [
                    "0",
                    "1",
                    "2",
                    "3",
                    "4"
                  ]
                },
                "approval_pattern_decided_amount": {
                  "type": "number",
                  "example": 999999999999,
                  "description": "承認パターン決定金額  \n承認パターンのシングル承認、ダブル承認のしきい値となる金額を設定  \nしきい値が無い場合は、0を設定  \nSMBCのみ設定。  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 12
                },
                "approver_info": {
                  "type": "array",
                  "description": "承認者情報  \n※承認パターン区分が「0」以外の場合のみ設定\n※承認者情報のソート順は以下とする  \n  ①利用者コード（昇順）  \n※最大500回繰り返し\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_code": {
                        "type": "string",
                        "example": "Z001",
                        "description": "利用者コード  \n",
                        "x-nullable": true,
                        "x-format": "英数字",
                        "minLength": 4,
                        "maxLength": 12
                      },
                      "user_name": {
                        "type": "string",
                        "example": "日本太郎",
                        "description": "利用者名  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 40
                      },
                      "credit_upper_limit_per_transaction": {
                        "type": "number",
                        "example": 999999999999,
                        "description": "取引あたり限度額  \n利用者単位の取引の限度額を設定  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "credit_upper_limit_per_item": {
                        "type": "number",
                        "example": 999999999999,
                        "description": "明細あたり限度額  \n明細の限度額を設定  \nSMBCのみ設定  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      }
                    }
                  }
                },
                "operator_info": {
                  "type": "array",
                  "description": "依頼者情報  \n※依頼者情報のソート順は以下とする  \n  ①利用者コード（昇順）  \n※承認パターン区分が「0」の場合のみ設定\n※最大100回繰り返し\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "user_code": {
                        "type": "string",
                        "example": "Z002",
                        "description": "利用者コード  \n",
                        "x-nullable": true,
                        "x-format": "英数字",
                        "minLength": 4,
                        "maxLength": 12
                      },
                      "user_name": {
                        "type": "string",
                        "example": "日本花子",
                        "description": "利用者名  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 40
                      },
                      "credit_upper_limit_per_transaction": {
                        "type": "number",
                        "example": 999999999999,
                        "description": "取引あたり限度額  \n利用者単位の取引の限度額を設定  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      }
                    }
                  }
                },
                "fee_of_beneficiary_type": {
                  "type": "string",
                  "example": "0",
                  "description": "先方負担手数料利用区分  \n先方負担手数料利用区分を設定  \n0：利用なし（当方負担）  \n1：利用あり（登録金額）  \n2：利用なし（金額指定）  \n※本項目は対象業務が “10”（振込振替）の場合に設定  \n",
                  "x-nullable": true,
                  "enum": [
                    "0",
                    "1",
                    "2"
                  ]
                },
                "beneficiary_name_input_enabled": {
                  "type": "boolean",
                  "example": true,
                  "description": "受取人名入力可否  \n受取人名入力可否を設定  \nfalse：入力不要  \ntrue：入力可能  \n※本項目は対象業務が “10”（振込振替）の場合に設定  \n",
                  "x-nullable": true,
                  "enum": [
                    false,
                    true
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/banks/{bank_code}/users": {
      "get": {
        "tags": [
          "users"
        ],
        "summary": "利用者情報照会",
        "description": "利用者の利用可能な口座情報、振込依頼人情報、各業務権限の有無、資金移動の上限明細件数、その他の設定内容を取得する。  \n認可時、利用者がログイン時、資金移動API実行前に実行すること。  \n",
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBearer"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n「DIRECT-API-00005」を暗号化キーで暗号化した値を設定  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "$ref": "#/parameters/clientIDQueryParam"
          },
          {
            "$ref": "#/parameters/contractorIdQueryParam"
          },
          {
            "$ref": "#/parameters/autoManualModeQueryParam"
          },
          {
            "in": "query",
            "name": "target_service",
            "description": "対象業務  \n利用する対象業務を設定。  \n複数業務存在する場合は、複数回実施する。  \nアクセストークン取得・再発行のレスポンスの認可区分がONである業務を設定可能。  \n10：振込振替  \n20：総合振込  \n21：給与振込  \n22：賞与振込  \n23：口座振替種類１  \n24：口座振替種類２  \n25：口座振替種類３  \n26：口座振替種類４  \n27：口座振替種類５  \n30：振込振替（取引状況照会）  \n31：総合振込（取引状況照会）  \n32：給与・賞与振込（取引状況照会）  \n33：口座振替種類１（取引状況照会）  \n34：口座振替種類２（取引状況照会）  \n35：口座振替種類３（取引状況照会）  \n36：口座振替種類４（取引状況照会）  \n37：口座振替種類５（取引状況照会）  \n40：振込振替（承認）  \n41：総合振込（承認）  \n42：給与・賞与振込（承認）  \n43：口座振替種類１（承認）  \n44：口座振替種類２（承認）  \n45：口座振替種類３（承認）  \n46：口座振替種類４（承認）  \n47：口座振替種類５（承認）  \n50：口座振替種類１結果照会  \n51：口座振替種類２結果照会  \n52：口座振替種類３結果照会  \n53：口座振替種類４結果照会  \n54：口座振替種類５結果照会  \n55：口座振替種類１手数料照会  \n56：口座振替種類２手数料照会  \n57：口座振替種類３手数料照会  \n58：口座振替種類４手数料照会  \n59：口座振替種類５手数料照会  \n",
            "required": true,
            "type": "string",
            "enum": [
              "10",
              "20",
              "21",
              "22",
              "23",
              "24",
              "25",
              "26",
              "27",
              "30",
              "31",
              "32",
              "33",
              "34",
              "35",
              "36",
              "37",
              "40",
              "41",
              "42",
              "43",
              "44",
              "45",
              "46",
              "47",
              "50",
              "51",
              "52",
              "53",
              "54",
              "55",
              "56",
              "57",
              "58",
              "59"
            ]
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "target_service": {
                  "type": "string",
                  "example": "10",
                  "description": "対象業務  \n対象の業務を設定  \n10：振込振替  \n20：総合振込  \n21：給与振込  \n22：賞与振込  \n23：口座振替種類１  \n24：口座振替種類２  \n25：口座振替種類３  \n26：口座振替種類４  \n27：口座振替種類５  \n30：振込振替（取引状況照会）  \n31：総合振込（取引状況照会）  \n32：給与・賞与振込（取引状況照会）  \n33：口座振替種類１（取引状況照会）  \n34：口座振替種類２（取引状況照会）  \n35：口座振替種類３（取引状況照会）  \n36：口座振替種類４（取引状況照会）  \n37：口座振替種類５（取引状況照会）  \n40：振込振替（承認）  \n41：総合振込（承認）  \n42：給与・賞与振込（承認）  \n43：口座振替種類１（承認）  \n44：口座振替種類２（承認）  \n45：口座振替種類３（承認）  \n46：口座振替種類４（承認）  \n47：口座振替種類５（承認）  \n50：口座振替種類１結果照会  \n51：口座振替種類２結果照会  \n52：口座振替種類３結果照会  \n53：口座振替種類４結果照会  \n54：口座振替種類５結果照会  \n55：口座振替種類１手数料照会  \n56：口座振替種類２手数料照会  \n57：口座振替種類３手数料照会  \n58：口座振替種類４手数料照会  \n59：口座振替種類５手数料照会  \n",
                  "x-nullable": false,
                  "enum": [
                    "10",
                    "20",
                    "21",
                    "22",
                    "23",
                    "24",
                    "25",
                    "26",
                    "27",
                    "30",
                    "31",
                    "32",
                    "33",
                    "34",
                    "35",
                    "36",
                    "37",
                    "40",
                    "41",
                    "42",
                    "43",
                    "44",
                    "45",
                    "46",
                    "47",
                    "50",
                    "51",
                    "52",
                    "53",
                    "54",
                    "55",
                    "56",
                    "57",
                    "58",
                    "59"
                  ]
                },
                "count": {
                  "type": "integer",
                  "example": 1,
                  "description": "口座数  \n口座件数を設定  \n",
                  "x-nullable": false,
                  "minLength": 1,
                  "maxLength": 4
                },
                "accounts": {
                  "type": "array",
                  "description": "口座一覧（リスト）  \n※本項目は対象業務が以下の場合、設定されない。  \n  33：口座振替種類１（取引状況照会）  \n  34：口座振替種類２（取引状況照会）  \n  35：口座振替種類３（取引状況照会）  \n  36：口座振替種類４（取引状況照会）  \n  37：口座振替種類５（取引状況照会）  \n  43：口座振替種類１（承認）  \n  44：口座振替種類２（承認）  \n  45：口座振替種類３（承認）  \n  46：口座振替種類４（承認）  \n  47：口座振替種類５（承認）  \n※口座一覧（リスト）のソート順は以下とする。  \n  ①支店コード（昇順）  \n  ②預金種目コード（昇順）  \n  ③口座番号（昇順）  \n※最大3,000回繰り返し\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "account_id": {
                        "type": "string",
                        "example": "0000000000001",
                        "description": "口座識別子  \n",
                        "x-nullable": true,
                        "minLength": 13,
                        "maxLength": 13
                      },
                      "account": {
                        "type": "string",
                        "example": "115011100001",
                        "description": "口座  \n口座情報（支店コード、預金種目コード、口座番号を連結した値）を取得  \n",
                        "x-nullable": true,
                        "minLength": 6,
                        "maxLength": 12
                      },
                      "branch_name_kana": {
                        "type": "string",
                        "example": "ｱｷﾊﾊﾞﾗ支店",
                        "description": "支店名（カナ）  \nカナ支店名を設定  \n※半角15文字以内＋店舗属性（全角4文字以内）  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 19
                      },
                      "branch_name_kanji": {
                        "type": "string",
                        "example": "秋葉原支店",
                        "description": "支店名（漢字）  \n漢字支店名を設定  \n※全角15文字以内＋店舗属性（全角4文字以内）  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "minLength": 1,
                        "maxLength": 19
                      },
                      "account_type": {
                        "type": "string",
                        "example": "普通",
                        "description": "預金種目名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "minLength": 1,
                        "maxLength": 10
                      },
                      "account_number": {
                        "type": "string",
                        "example": "1100001",
                        "description": "口座番号  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "remitter_info": {
                        "type": "array",
                        "description": "振込依頼人情報  \n委託者情報を設定  \n※振込依頼人情報のソート順は以下とする  \n  ①振込依頼人コード（昇順）※設定されている場合のみ\n",
                        "items": {
                          "type": "object",
                          "properties": {
                            "remitter_code": {
                              "type": "string",
                              "example": "1234567891",
                              "description": "振込依頼人コード  \n依頼人や企業を特定するコードを設定  \n",
                              "x-nullable": true,
                              "minLength": 1,
                              "maxLength": 10
                            },
                            "remitter_name_info": {
                              "type": "array",
                              "description": "振込依頼人名情報  \n委託者名情報を設定  \n※振込依頼人名情報のソート順は以下とする  \n  ①振込依頼人名（昇順）※設定されている場合のみ\n",
                              "items": {
                                "type": "object",
                                "properties": {
                                  "remitter_name": {
                                    "type": "string",
                                    "example": "ｲﾀｸｼｬﾒｲ1",
                                    "description": "振込依頼人名  \n委託者名を設定  \n",
                                    "x-nullable": true,
                                    "x-format": "半角",
                                    "minLength": 1,
                                    "maxLength": 40
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                },
                "balance_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "残高照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記2つのAPIが実行可能。  \n  ・残高照会（全口座）  \n  ・残高照会（口座指定）  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transactions_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "入出金明細照会（ANSER）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・入出金明細照会（ANSER）  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transactions_jba_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "入出金明細照会（全銀）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・入出金明細照会（全銀）  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "deposit_transactions_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "振込入金明細照会（ANSER）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・振込入金明細照会（ANSER）  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "deposit_transactions_jba_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "振込入金明細照会（全銀）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・振込入金明細照会（全銀）  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_request_authority_status": {
                  "type": "string",
                  "example": "ON_INPUT",
                  "description": "振込振替（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT：保有あり（都度指定）  \nON_REGISTERED：保有あり（事前登録）  \nON_ALL：保有あり（都度指定／事前登録両方）  \n※ON_INPUTまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・振込振替依頼データ登録  \n※事前登録方式でのAPIは現在提供していない。  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_REGISTERED",
                    "ON_ALL"
                  ]
                },
                "bulk_transfer_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "総合振込（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・総合振込依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "payroll_transfer_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "給与・賞与振込（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・給与・賞与振込依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "direct_debit_1_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "口座振替種類１（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "direct_debit_2_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "口座振替種類２（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "direct_debit_3_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "口座振替種類３（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "direct_debit_4_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "口座振替種類４（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "direct_debit_5_request_authority_status": {
                  "type": "string",
                  "example": "ON_ALL",
                  "description": "口座振替種類５（依頼）権限保有状態  \nOFF：保有なし  \nON_INPUT ：保有あり（画面入力）  \nON_FILE ：保有あり（ファイル受付）  \nON_ALL ：保有あり（画面入力／ファイル受付両方）  \n※ON_INPUTまたはON_FILEまたはON_ALLの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ登録  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON_INPUT",
                    "ON_FILE",
                    "ON_ALL"
                  ]
                },
                "transfer_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（振込振替）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・振込振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "bulk_transfer_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（総合振込）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・総合振込依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "payroll_transfer_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（給与・賞与振込）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・給与・賞与振込依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類１）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類２）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類３）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類４）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_status_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "取引状況照会（口座振替種類５）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（振込振替）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・振込振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "bulk_transfer_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（総合振込）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・総合振込依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "payroll_transfer_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（給与・賞与振込）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・給与・賞与振込依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類１）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類２）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類３）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類４）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_approval_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "承認（口座振替種類５）権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替依頼データ承認  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_result_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類１結果照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替結果照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_result_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類２結果照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替結果照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_result_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類３結果照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替結果照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_result_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類４結果照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替結果照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_result_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類５結果照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替結果照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_1_fee_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類１手数料照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替手数料照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_2_fee_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類２手数料照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替手数料照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_3_fee_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類３手数料照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替手数料照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_4_fee_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類４手数料照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替手数料照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "direct_debit_5_fee_authority_status": {
                  "type": "string",
                  "example": "ON",
                  "description": "口座振替種類５手数料照会権限保有状態  \nOFF：保有なし  \nON ：保有あり  \n※ONの場合、下記のAPIが実行可能。  \n  ・口座振替手数料照会  \n",
                  "x-nullable": true,
                  "enum": [
                    "OFF",
                    "ON"
                  ]
                },
                "transfer_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "振込先上限明細件数（振込振替）  \nFintechでチェックする振込振替の振込先上限明細件数を設定  \n※本項目は対象業務が “10”（振込振替）の場合に設定  \n※振込振替権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 4
                },
                "bulk_transfer_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "振込先上限明細件数（総合振込）  \nFintechでチェックする総合振込の振込先上限明細件数を設定  \n※本項目は対象業務が “20”（総合振込）の場合に設定  \n※総合振込権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "payroll_transfer_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "振込先上限明細件数（給与・賞与振込）  \nFintechでチェックする給与・賞与振込の振込先上限明細件数を設定  \n※本項目は対象業務が  “21”（給与振込）、または、“22”（賞与振込）の場合に設定  \n※給与・賞与振込（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "direct_debit_1_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "請求先上限明細件数（口座振替種類１）  \nFintechでチェックする口座振替種類１の請求先上限明細件数を設定  \n※本項目は対象業務が以下の場合に設定  \n  23：口座振替種類１  \n※口座振替種類１（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "direct_debit_2_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "請求先上限明細件数（口座振替種類２）  \nFintechでチェックする口座振替種類２の請求先上限明細件数を設定  \n※本項目は対象業務が以下の場合に設定  \n  24：口座振替種類２  \n※口座振替種類２（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "direct_debit_3_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "請求先上限明細件数（口座振替種類３）  \nFintechでチェックする口座振替種類３の請求先上限明細件数を設定  \n※本項目は対象業務が以下の場合に設定  \n  25：口座振替種類３  \n※口座振替種類３（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "direct_debit_4_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "請求先上限明細件数（口座振替種類４）  \nFintechでチェックする口座振替種類４の請求先上限明細件数を設定  \n※本項目は対象業務が以下の場合に設定  \n  26：口座振替種類４  \n※口座振替種類４（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "direct_debit_5_upper_limit_count": {
                  "type": "integer",
                  "example": 10,
                  "description": "請求先上限明細件数（口座振替種類５）  \nFintechでチェックする口座振替種類５の請求先上限明細件数を設定  \n※本項目は対象業務が以下の場合に設定  \n  27：口座振替種類５  \n※口座振替種類５（依頼）権限が「保有なし」の場合は設定されない  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "consignor_code_and_deposit_account_input_necessity": {
                  "type": "string",
                  "example": "1",
                  "description": "委託者コード・入金口座入力要否  \n口座振替結果照会と口座振替手数料照会の委託者コードと入金口座の入力要否を設定  \n  1：委託者コード入力必要  \n  2：入金口座入力必要  \n  3：委託者コード・入金口座入力必要  \n  \n※本項目は対象業務が以下の場合に設定  \n  50：口座振替種類１結果照会  \n  51：口座振替種類２結果照会  \n  52：口座振替種類３結果照会  \n  53：口座振替種類４結果照会  \n  54：口座振替種類５結果照会  \n  55：口座振替種類１手数料照会  \n  56：口座振替種類２手数料照会  \n  57：口座振替種類３手数料照会  \n  58：口座振替種類４手数料照会  \n  59：口座振替種類５手数料照会  \n※対象業務の照会権限が「保有なし」の場合は設定されない\n",
                  "x-nullable": true,
                  "enum": [
                    "1",
                    "2",
                    "3"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/banks/{bank_code}/accounts/{account_id}": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "残高照会（口座指定）",
        "description": "指定した口座の残高を照会する。\n",
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBearer"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n「DIRECT-API-00010」を暗号化キーで暗号化した値を設定  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "$ref": "#/parameters/accountIdPath"
          },
          {
            "$ref": "#/parameters/clientIDQueryParam"
          },
          {
            "$ref": "#/parameters/contractorIdQueryParam"
          },
          {
            "$ref": "#/parameters/autoManualModeQueryParam"
          },
          {
            "name": "date",
            "in": "query",
            "description": "残高照会日付  \n残高照会日付をYYYY-MM-DD形式で設定  \nSMBCのみ設定  \n",
            "required": false,
            "type": "string",
            "format": "date",
            "minLength": 10,
            "maxLength": 10
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "count": {
                  "type": "integer",
                  "example": 1,
                  "description": "口座数  \n口座件数を設定  \n",
                  "x-nullable": false,
                  "minLength": 1,
                  "maxLength": 3
                },
                "accounts": {
                  "type": "array",
                  "description": "口座一覧（リスト）  \n最大100回繰り返し\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "contact_name": {
                        "type": "string",
                        "example": "連絡先名",
                        "description": "連絡先名  \n※半角48文字／全角23文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      "branch_name": {
                        "type": "string",
                        "example": "東京本店",
                        "description": "支店名  \n※支店名（半角15文字／全角15文字以内）＋店舗属性（全角4文字以内）  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 19
                      },
                      "branch_code": {
                        "type": "string",
                        "example": "115",
                        "description": "支店コード  \n",
                        "x-nullable": true,
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "account_type": {
                        "type": "string",
                        "example": "普通",
                        "description": "預金種目名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "minLength": 1,
                        "maxLength": 10
                      },
                      "account_number": {
                        "type": "string",
                        "example": "1100001",
                        "description": "口座番号  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "account_branch_number": {
                        "type": "string",
                        "example": "0",
                        "description": "口座枝番  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "account_id": {
                        "type": "string",
                        "example": "0000000000001",
                        "description": "口座識別子  \n",
                        "x-nullable": true,
                        "minLength": 13,
                        "maxLength": 13
                      },
                      "base_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "基準日  \n基準日をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "base_time": {
                        "type": "string",
                        "format": "date",
                        "example": "12:20:30+09:00",
                        "description": "基準時刻  \n基準時刻をhh:mm:ss+09:00形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 14,
                        "maxLength": 14
                      },
                      "current_balance_title": {
                        "type": "string",
                        "example": "預金残高",
                        "description": "現在残高タイトル  \n※半角8文字／全角4文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 8
                      },
                      "current_balance": {
                        "type": "number",
                        "example": 20000000,
                        "description": "現在残高  \n※残高が負の値の場合、マイナス付与して返却される  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "checks_issued_by_other_banks_title": {
                        "type": "string",
                        "example": "残高の内他店券",
                        "description": "他店券残高タイトル  \n※半角20文字／全角10文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "checks_issued_by_other_banks": {
                        "type": "number",
                        "example": 10000000,
                        "description": "他店券残高  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 14
                      },
                      "overdraft_limit": {
                        "type": "number",
                        "example": 2000000,
                        "description": "貸越極度額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 14
                      },
                      "withdrawable_balance_title": {
                        "type": "string",
                        "example": "お引き出し可能金額",
                        "description": "支払可能残高タイトル  \n※半角20文字／全角10文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "withdrawable_balance": {
                        "type": "number",
                        "example": 10000000,
                        "description": "支払可能残高  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "previous_day_balance_title": {
                        "type": "string",
                        "example": "預金残高",
                        "description": "前日残高タイトル  \n※半角8文字／全角4文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 8
                      },
                      "previous_day_balance": {
                        "type": "number",
                        "example": 10000000,
                        "description": "前日残高  \n※前日残高が負の値の場合、マイナス付与して返却される  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "previous_month_balance_title": {
                        "type": "string",
                        "example": "融資残高",
                        "description": "前月末残高タイトル  \n※半角8文字／全角4文字以内  \n",
                        "x-nullable": true,
                        "x-format": "半角全角",
                        "minLength": 1,
                        "maxLength": 8
                      },
                      "previous_month_balance": {
                        "type": "number",
                        "example": 10000000,
                        "description": "前月末残高  \n※前月末残高が負の値の場合、マイナス付与して返却される  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "balance_fixed_inquiry_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01T12:20:00+09:00",
                        "description": "残高確定（照会）日時  \n残高確定（照会）日時をYYYY-MM-DDThh:mm:00+09:00形式で設定\n",
                        "x-nullable": true,
                        "minLength": 25,
                        "maxLength": 25
                      },
                      "currency_code": {
                        "type": "string",
                        "example": "JPY",
                        "description": "通貨コード  \n”JPY”固定  \n",
                        "x-nullable": true,
                        "enum": [
                          "JPY"
                        ]
                      }
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    },
    "/banks/{bank_code}/accounts/{account_id}/transactions_jba": {
      "get": {
        "tags": [
          "accounts"
        ],
        "summary": "入出金明細照会（全銀）",
        "description": "指定した口座のAnserBizSOLセンタに蓄積された入出金明細情報を一括して照会する。  \n",
        "produces": [
          "application/json",
          "application/problem+json"
        ],
        "parameters": [
          {
            "$ref": "#/parameters/hostHeader"
          },
          {
            "$ref": "#/parameters/authorizationHeaderBearer"
          },
          {
            "in": "header",
            "name": "company_authentication_identifier",
            "description": "企業認証識別子（Crypto-Item）  \n「DIRECT-API-00011」を暗号化キーで暗号化した値を設定  \n※直接企業連携でない場合、パラメータごと不要  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字記号"
          },
          {
            "$ref": "#/parameters/bankCodePath"
          },
          {
            "$ref": "#/parameters/accountIdPath"
          },
          {
            "$ref": "#/parameters/clientIDQueryParam"
          },
          {
            "$ref": "#/parameters/contractorIdQueryParam"
          },
          {
            "$ref": "#/parameters/autoManualModeQueryParam"
          },
          {
            "name": "service_id",
            "in": "query",
            "description": "サービスID  \n照会対象を設定  \nA00A：未照会の明細を照会  \nB00A：照会済みの明細を照会  \nC00A：全ての明細を照会  \n※SMBCの場合C00Aのみ設定可能  \n",
            "required": true,
            "type": "string",
            "x-format": "英数字",
            "enum": [
              "A00A",
              "B00A",
              "C00A"
            ]
          },
          {
            "name": "date_from",
            "in": "query",
            "description": "対象期間（from）  \n対象期間（from）をYYYY-MM-DD形式で設定  \n金融機関申込「上限値設定パターンにおける入出金明細（全銀）保有期間」  \n（金融機関申込番号：申00285）の範囲内で設定可能（SMBCは対象外）  \n※各金融機関の申込についてはAPI連携利用行一覧を参照  \n※SMBCの場合必須  \n",
            "required": false,
            "type": "string",
            "format": "date",
            "minLength": 10,
            "maxLength": 10
          },
          {
            "name": "date_to",
            "in": "query",
            "description": "対象期間（to）  \n対象期間（to）をYYYY-MM-DD形式で設定  \n※SMBCの場合必須  \n",
            "required": false,
            "type": "string",
            "format": "date",
            "minLength": 10,
            "maxLength": 10
          },
          {
            "name": "item_key",
            "in": "query",
            "description": "明細キー  \n応答電文の同項目を設定  \n  例）55,000明細の入出金明細情報を取得する場合  \n     1電文目：0  \n     2電文目：20000   \n     3電文目：40000   \n※設定を省略した場合、0が設定されたものとする。  \n※応答時の明細キーに関わらず、任意の明細キーを設定することも可能とする。  \n※SMBCのみ設定  \n",
            "required": false,
            "type": "string",
            "minLength": 1,
            "maxLength": 8
          },
          {
            "name": "session_info",
            "in": "query",
            "description": "セション情報  \n初回要求時は設定しない  \n初回要求時以外は、応答電文の同項目を設定  \n※「明細キー」が省略（設定値無し、0を含む）された場合、設定不要  \n※SMBCのみ設定  \n",
            "required": false,
            "type": "string",
            "x-format": "英数字",
            "minLength": 23,
            "maxLength": 24
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "type": "object",
              "properties": {
                "inquiry_result": {
                  "type": "string",
                  "example": "1",
                  "description": "照会結果  \n0：データなし  \n1：データあり  \n",
                  "x-nullable": false,
                  "enum": [
                    "0",
                    "1"
                  ]
                },
                "category_code": {
                  "type": "string",
                  "example": "03",
                  "description": "種別コード  \n03：入出金取引明細\n",
                  "x-nullable": true,
                  "enum": [
                    "03"
                  ]
                },
                "created_date_japanese_calendar": {
                  "type": "string",
                  "format": "date",
                  "example": "29-01-01",
                  "description": "作成日（和暦）  \nデータ作成日をYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 8,
                  "maxLength": 8
                },
                "created_date_ad": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-01-01",
                  "description": "作成日（西暦）  \nデータ作成日をYYYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "base_date": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-01-01",
                  "description": "基準日  \n基準日をYYYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "base_time": {
                  "type": "string",
                  "format": "date",
                  "example": "12:20:30+09:00",
                  "description": "基準時刻  \n基準時刻をhh:mm:ss+09:00形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 14,
                  "maxLength": 14
                },
                "transaction_date_from_japanese_calendar": {
                  "type": "string",
                  "format": "date",
                  "example": "29-01-01",
                  "description": "取引日（自）（和暦）  \n取引日（自）をYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 8,
                  "maxLength": 8
                },
                "transaction_date_from_ad": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-01-01",
                  "description": "取引日（自）（西暦）  \n取引日（自）（西暦）をYYYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "transaction_date_to_japanese_calendar": {
                  "type": "string",
                  "format": "date",
                  "example": "29-01-31",
                  "description": "取引日（至）（和暦）  \n取引日（至）をYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 8,
                  "maxLength": 8
                },
                "transaction_date_to_ad": {
                  "type": "string",
                  "format": "date",
                  "example": "2017-01-31",
                  "description": "取引日（至）（西暦）  \n取引日（至）（西暦）をYYYY-MM-DD形式で設定  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "bank_code": {
                  "type": "string",
                  "example": "1234",
                  "description": "金融機関コード  \n",
                  "x-nullable": true,
                  "minLength": 4,
                  "maxLength": 4
                },
                "bank_name_kana": {
                  "type": "string",
                  "example": "ﾄｳｷｮｳ",
                  "description": "金融機関名（カナ）  \n",
                  "x-nullable": true,
                  "x-format": "半角",
                  "minLength": 1,
                  "maxLength": 15
                },
                "branch_code": {
                  "type": "string",
                  "example": "123",
                  "description": "支店コード  \n",
                  "x-nullable": true,
                  "minLength": 3,
                  "maxLength": 3
                },
                "branch_name_kana": {
                  "type": "string",
                  "example": "ｼﾃﾝ",
                  "description": "支店名（カナ）  \n",
                  "x-nullable": true,
                  "x-format": "半角",
                  "minLength": 1,
                  "maxLength": 15
                },
                "account_type_code": {
                  "type": "string",
                  "example": "01",
                  "description": "預金種目コード  \n",
                  "x-nullable": true,
                  "minLength": 2,
                  "maxLength": 2
                },
                "account_type": {
                  "type": "string",
                  "example": "普通",
                  "description": "預金種目名  \n",
                  "x-nullable": true,
                  "x-format": "全角",
                  "minLength": 1,
                  "maxLength": 10
                },
                "account_number": {
                  "type": "string",
                  "example": "0000355368",
                  "description": "口座番号  \n",
                  "x-nullable": true,
                  "minLength": 10,
                  "maxLength": 10
                },
                "account_id": {
                  "type": "string",
                  "example": "0000000000001",
                  "description": "口座識別子  \n",
                  "x-nullable": true,
                  "minLength": 13,
                  "maxLength": 13
                },
                "account_name": {
                  "type": "string",
                  "example": "ｼﾖｳｶｲ",
                  "description": "口座名  \n",
                  "x-nullable": true,
                  "x-format": "半角",
                  "minLength": 1,
                  "maxLength": 40
                },
                "overdraft_type_header": {
                  "type": "string",
                  "example": "1",
                  "description": "貸越区分（ヘッダー）  \n貸越区分を設定  \n1：プラス  \n2：マイナス\n",
                  "x-nullable": true,
                  "enum": [
                    "1",
                    "2"
                  ]
                },
                "passbook_or_certificate_type": {
                  "type": "string",
                  "example": "1",
                  "description": "通帳・証書区分  \n1：通帳  \n2：証書  \n",
                  "x-nullable": true,
                  "enum": [
                    "1",
                    "2"
                  ]
                },
                "balance_before_transaction": {
                  "type": "number",
                  "example": 99028913211,
                  "description": "取引前残高  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 14
                },
                "trasaction_data1": {
                  "type": "array",
                  "description": "明細データ1  \n※最大20,000回繰り返し\n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "inquiry_number": {
                        "type": "string",
                        "example": "03000001",
                        "description": "照会番号  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "transaction_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "取引日（和暦）  \n取引日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "transaction_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "取引日（西暦）  \n取引日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "initial_date_of_reckoning_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "起算日（和暦）  \n起算日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "initial_date_of_reckoning_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "起算日（西暦）  \n起算日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "deposit_credit_type": {
                        "type": "string",
                        "example": "1",
                        "description": "入払区分  \n1：入金  \n2：出金\n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2"
                        ]
                      },
                      "transaction_type": {
                        "type": "string",
                        "example": "12",
                        "description": "取引区分  \n10：現金  \n11：振込  \n12：他店券入金  \n13：交換（取立入金および交換払）  \n14：振替  \n18：その他  \n19：訂正  \n31：でんさい  \n",
                        "x-nullable": true,
                        "enum": [
                          "10",
                          "11",
                          "12",
                          "13",
                          "14",
                          "18",
                          "19",
                          "31"
                        ]
                      },
                      "transaction_type_name": {
                        "type": "string",
                        "example": "他店券入金",
                        "description": "取引区分名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "enum": [
                          "現金",
                          "振込",
                          "他店券入金",
                          "交換（取立入金および交換払）",
                          "振替",
                          "その他",
                          "訂正",
                          "でんさい"
                        ]
                      },
                      "amount": {
                        "type": "number",
                        "example": 60000,
                        "description": "取引金額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "checks_issued_by_other_banks_amount": {
                        "type": "number",
                        "example": 10000,
                        "description": "うち他店券金額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "exchange_presentation_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "交換呈示日（和暦）  \n交換呈示日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "exchange_presentation_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "交換呈示日（西暦）  \n交換呈示日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "dishonored_return_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "不渡返還日（和暦）  \n不渡返還日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "dishonored_return_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "不渡返還日（西暦）  \n不渡返還日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "bill_and_check_type": {
                        "type": "string",
                        "example": "1",
                        "description": "手形・小切手区分  \n1：小切手  \n2：約束手形  \n3：為替手形  \n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "bill_and_check_type_name": {
                        "type": "string",
                        "example": "小切手",
                        "description": "手形・小切手区分名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "enum": [
                          "小切手",
                          "約束手形",
                          "為替手形"
                        ]
                      },
                      "bill_and_check_number": {
                        "type": "string",
                        "example": "1234567",
                        "description": "手形・小切手番号  \n",
                        "x-nullable": true,
                        "minLength": 7,
                        "maxLength": 7
                      },
                      "branch_code": {
                        "type": "string",
                        "example": "123",
                        "description": "支店コード  \n",
                        "x-nullable": true,
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "remitter_code": {
                        "type": "string",
                        "example": "abcdefgHIJ",
                        "description": "振込依頼人コード  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "remitter_name_contractor_number": {
                        "type": "string",
                        "example": "ﾌﾘｺﾐｲﾗｲﾆﾝﾒｲ",
                        "description": "振込依頼人名または契約者番号  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 48
                      },
                      "remitting_bank_name": {
                        "type": "string",
                        "example": "ｷﾞﾝｺｳ",
                        "description": "仕向金融機関名  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "remitting_bank_branch_name": {
                        "type": "string",
                        "example": "ｼﾃﾝ",
                        "description": "仕向支店名  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 15
                      },
                      "abstract": {
                        "type": "string",
                        "example": "ﾌﾘｺﾐ",
                        "description": "摘要内容  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "edi_info": {
                        "type": "string",
                        "example": "EDIｼﾞﾖｳﾎｳ",
                        "description": "ＥＤＩ情報  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 20
                      }
                    }
                  }
                },
                "trasaction_data2": {
                  "type": "array",
                  "description": "明細データ2  \n※最大20,000回繰り返し\n※SMBCのみ設定  \n",
                  "items": {
                    "type": "object",
                    "properties": {
                      "identification_number": {
                        "type": "string",
                        "example": "12345678",
                        "description": "識別番号  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "transaction_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "取引日（和暦）  \n取引日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "transaction_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "取引日（西暦）  \n取引日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "initial_date_of_reckoning_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "起算日（和暦）  \n起算日（和暦）をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "initial_date_of_reckoning_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "起算日（西暦）  \n起算日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "deposit_credit_type": {
                        "type": "string",
                        "example": "1",
                        "description": "入払区分  \n1：入金  \n2：出金\n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2"
                        ]
                      },
                      "transaction_type": {
                        "type": "string",
                        "example": "10",
                        "description": "取引区分  \n10：現金  \n11：振込  \n12：他店券入金  \n13：交換（取立入金および交換払）  \n14：振替  \n18：その他  \n19：訂正  \n31：でんさい  \n",
                        "x-nullable": true,
                        "enum": [
                          "10",
                          "11",
                          "12",
                          "13",
                          "14",
                          "18",
                          "19",
                          "31"
                        ]
                      },
                      "transaction_type_name": {
                        "type": "string",
                        "example": "現金",
                        "description": "取引区分名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "enum": [
                          "現金",
                          "振込",
                          "他店券入金",
                          "交換（取立入金および交換払）",
                          "振替",
                          "その他",
                          "訂正",
                          "でんさい"
                        ]
                      },
                      "amount": {
                        "type": "number",
                        "example": 60000,
                        "description": "取引金額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "checks_issued_by_other_banks_amount": {
                        "type": "number",
                        "example": 15000,
                        "description": "うち他店券金額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 12
                      },
                      "exchange_presentation_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "交換呈示日（和暦）  \n交換呈示日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "exchange_presentation_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "交換呈示日（西暦）  \n交換呈示日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "dishonored_return_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "不渡返還日（和暦）  \n不渡返還日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "dishonored_return_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "不渡返還日（西暦）  \n不渡返還日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "bill_and_check_type": {
                        "type": "string",
                        "example": "1",
                        "description": "手形・小切手区分  \n1：小切手  \n2：約束手形  \n3：為替手形  \n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "bill_and_check_type_name": {
                        "type": "string",
                        "example": "小切手",
                        "description": "手形・小切手区分名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "enum": [
                          "小切手",
                          "約束手形",
                          "為替手形"
                        ]
                      },
                      "bill_and_check_number": {
                        "type": "string",
                        "example": "1234567",
                        "description": "手形・小切手番号  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 7,
                        "maxLength": 7
                      },
                      "branch_code": {
                        "type": "string",
                        "example": "123",
                        "description": "支店コード  \n",
                        "x-nullable": true,
                        "minLength": 3,
                        "maxLength": 3
                      },
                      "original_deposit_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "当初預入日（和暦）  \n当初預入日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "original_deposit_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "当初預入日（西暦）  \n当初預入日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "interest_rate": {
                        "type": "string",
                        "example": "020000",
                        "description": "利率  \n※上2桁整数、下4桁小数部  \n",
                        "x-nullable": true,
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "maturity_date_japanese_calendar": {
                        "type": "string",
                        "format": "date",
                        "example": "29-01-01",
                        "description": "満期日（和暦）  \n満期日をYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 8,
                        "maxLength": 8
                      },
                      "maturity_date_ad": {
                        "type": "string",
                        "format": "date",
                        "example": "2017-01-01",
                        "description": "満期日（西暦）  \n満期日（西暦）をYYYY-MM-DD形式で設定  \n",
                        "x-nullable": true,
                        "minLength": 10,
                        "maxLength": 10
                      },
                      "period1": {
                        "type": "string",
                        "example": "9010131",
                        "description": "期間（１）  \n期間（１）をYMMDDDD（Y：年表示　MM：月表示　DDDD：日表示）で設定  \n",
                        "x-nullable": true,
                        "minLength": 7,
                        "maxLength": 7
                      },
                      "period_interest": {
                        "type": "number",
                        "example": 5000,
                        "description": "期間利息  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 11
                      },
                      "interim_payment_interest_rate": {
                        "type": "string",
                        "example": "015000",
                        "description": "中間払利率  \n※上2桁整数、下4桁小数部  \n",
                        "x-nullable": true,
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "interim_payment_type": {
                        "type": "string",
                        "example": "1",
                        "description": "中間払区分  \n1：現金  \n2：指定口座への振替  \n3：定期預金の作成  \n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2",
                          "3"
                        ]
                      },
                      "period_after_term": {
                        "type": "string",
                        "example": "0100",
                        "description": "期後期間  \n",
                        "x-nullable": true,
                        "minLength": 4,
                        "maxLength": 4
                      },
                      "interest_rate_after_term": {
                        "type": "string",
                        "example": "017000",
                        "description": "期後利率  \n※上2桁整数、下4桁小数部  \n",
                        "x-nullable": true,
                        "minLength": 6,
                        "maxLength": 6
                      },
                      "interest_after_term": {
                        "type": "number",
                        "example": 7000,
                        "description": "期後利息  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 9
                      },
                      "total_interest": {
                        "type": "number",
                        "example": 12000,
                        "description": "合計利息  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 11
                      },
                      "tax_type": {
                        "type": "string",
                        "example": "1",
                        "description": "税区分  \n1：総合課金  \n2：分割課税  \n3：マル優  \n4：マル財  \n5：非居住者  \n6：特別マル財  \n9：その他  \n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2",
                          "3",
                          "4",
                          "5",
                          "6",
                          "9"
                        ]
                      },
                      "tax_type_name": {
                        "type": "string",
                        "example": "総合課金",
                        "description": "税区分名  \n",
                        "x-nullable": true,
                        "x-format": "全角",
                        "enum": [
                          "総合課金",
                          "分割課税",
                          "マル優",
                          "マル財",
                          "非居住者",
                          "特別マル財",
                          "その他"
                        ]
                      },
                      "tax_rate": {
                        "type": "string",
                        "example": "1000",
                        "description": "税率  \n※上2桁整数、下2桁小数部  \n",
                        "x-nullable": true,
                        "minLength": 4,
                        "maxLength": 4
                      },
                      "tax_amount": {
                        "type": "number",
                        "example": 1200,
                        "description": "税額  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 10
                      },
                      "aftertax_interest": {
                        "type": "number",
                        "example": 10800,
                        "description": "税引後利息  \n",
                        "x-nullable": true,
                        "minLength": 1,
                        "maxLength": 11
                      },
                      "abstract": {
                        "type": "string",
                        "example": "ﾌﾘｺﾐ",
                        "description": "摘要内容  \n",
                        "x-nullable": true,
                        "x-format": "半角",
                        "minLength": 1,
                        "maxLength": 20
                      },
                      "period2": {
                        "type": "string",
                        "example": "29112",
                        "description": "期間（２）  \n期間（２）をYYMMM（YY：年表示　MMM：月表示）を設定  \n",
                        "x-nullable": true,
                        "minLength": 5,
                        "maxLength": 5
                      },
                      "period_interest_positive_and_negative_display": {
                        "type": "string",
                        "example": "1",
                        "description": "期間利息正負表示  \n1：正  \n2：負  \n",
                        "x-nullable": true,
                        "enum": [
                          "1",
                          "2"
                        ]
                      }
                    }
                  }
                },
                "deposit_count": {
                  "type": "integer",
                  "example": 7,
                  "description": "入金件数  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 6
                },
                "total_deposit_amount": {
                  "type": "number",
                  "example": 300000,
                  "description": "入金額合計  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 13
                },
                "withdrawal_count": {
                  "type": "integer",
                  "example": 3,
                  "description": "出金件数  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 6
                },
                "total_withdrawal_amount": {
                  "type": "number",
                  "example": 5000,
                  "description": "出金額合計  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 13
                },
                "overdraft_type_trailer": {
                  "type": "string",
                  "example": "1",
                  "description": "貸越区分（トレーラー）  \n貸越区分を設定  \n1：プラス  \n2：マイナス\n",
                  "x-nullable": true,
                  "enum": [
                    "1",
                    "2"
                  ]
                },
                "transaction_balance": {
                  "type": "number",
                  "example": 100000,
                  "description": "取引後残高  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 14
                },
                "transaction_data_count": {
                  "type": "integer",
                  "example": 6,
                  "description": "明細データ件数  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 7
                },
                "total_count": {
                  "type": "integer",
                  "example": 5,
                  "description": "取引総件数  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 10
                },
                "count": {
                  "type": "integer",
                  "example": 1,
                  "description": "口座数  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 5
                },
                "next_flag": {
                  "type": "string",
                  "example": "1",
                  "description": "明細継続フラグ  \n照会条件に該当する入出金明細が最大件数を超過したため、  \n全て返却出来なかった場合に「1：継続あり（最大明細件数超過）」を設定  \n1：継続あり（最大明細件数超過）  \n\n※明細継続フラグに1が設定されている場合、取得できなかった情報の取得は  \n  AnserBizSOLにて行ってください  \n  ただしSMBCの場合、レスポンスの明細キー及びセション情報の値を  \n  リクエスト時に設定することで取得できなかった情報を取得可能\n",
                  "enum": [
                    "1"
                  ],
                  "x-nullable": true
                },
                "has_next": {
                  "type": "boolean",
                  "example": false,
                  "description": "継続情報  \n本APIでは一括で明細を返却するためfalseを返却する。\n",
                  "enum": [
                    false
                  ],
                  "x-nullable": false
                },
                "item_key": {
                  "type": "string",
                  "example": "20000",
                  "description": "明細キー  \n返却済み明細件数を設定  \n明細キーは「明細継続フラグ」とあわせて以下のように設定  \n  例）55,000明細の入出金明細情報を取得する場合  \n     1電文目：継続フラグ＝継続あり、明細キー＝20000  \n     2電文目：継続フラグ＝継続あり、明細キー＝40000  \n     3電文目：継続フラグ＝省略、明細キー＝0  \n※SMBCのみ設定  \n",
                  "x-nullable": true,
                  "minLength": 1,
                  "maxLength": 8
                },
                "session_info": {
                  "type": "string",
                  "example": "BZDBIB112150951480831001",
                  "description": "セション情報  \nセション情報は「明細継続フラグ」が1：継続あり（最大明細件数超過）時のみ設定  \n※SMBCのみ設定  \n",
                  "x-nullable": true,
                  "x-format": "英数字",
                  "minLength": 23,
                  "maxLength": 24
                },
                "currency_code": {
                  "type": "string",
                  "example": "JPY",
                  "description": "通貨コード  \n”JPY”固定  \n",
                  "x-nullable": false,
                  "enum": [
                    "JPY"
                  ]
                }
              }
            }
          },
          "400": {
            "description": "Bad Request",
            "schema": {
              "$ref": "#/definitions/400"
            }
          },
          "403": {
            "description": "Forbidden",
            "schema": {
              "$ref": "#/definitions/403"
            }
          },
          "404": {
            "description": "Not Found",
            "schema": {
              "$ref": "#/definitions/404"
            }
          },
          "500": {
            "description": "Internal Server Error",
            "schema": {
              "$ref": "#/definitions/500"
            }
          }
        }
      }
    }
  },
  "parameters": {
    "hostHeader": {
      "in": "header",
      "name": "Host",
      "description": "ホスト(Host)  \nHTTPバージョンが “HTTP/1.1” の場合に送信先ホスト名、ポート番号を設定  \n",
      "required": false,
      "type": "string",
      "x-format": "英数字記号"
    },
    "authorizationHeaderBasic": {
      "in": "header",
      "name": "Authorization",
      "description": "クライアント識別子・パスワード（Basic認証）  \nクライアント識別子とクライアントパスワードをBase64でエンコードした値を設定。  \n(例) Authorization:△Basic△xxxxx  \n※△は半角スペース  \n",
      "required": true,
      "type": "string",
      "x-format": "英数字"
    },
    "authorizationHeaderBearer": {
      "in": "header",
      "name": "Authorization",
      "description": "アクセストークン(Bearer認証)  \nアクセストークン取得・再発行のレスポンスのアクセストークンをBearer認証の形で設定。  \n（例）Authorization:△Bearer△xxxxx  \n※△は半角スペース  \n",
      "required": true,
      "type": "string",
      "x-format": "英数字"
    },
    "bankCodePath": {
      "in": "path",
      "name": "bank_code",
      "description": "金融機関コード  \nＡＰＩ連携対象の金融機関コードを設定  \n",
      "required": true,
      "type": "string",
      "minLength": 4,
      "maxLength": 4
    },
    "accountIdPath": {
      "in": "path",
      "name": "account_id",
      "description": "口座識別子  \n利用者情報照会のレスポンスの口座識別子を設定。  \n",
      "required": true,
      "type": "string",
      "minLength": 13,
      "maxLength": 13
    },
    "clientIDQueryParam": {
      "in": "query",
      "name": "client_id",
      "description": "クライアント識別子  \nAPI利用事業者を識別するＩＤを設定  \n",
      "required": true,
      "type": "string",
      "x-format": "英数字",
      "minLength": 8,
      "maxLength": 8
    },
    "contractorIdQueryParam": {
      "in": "query",
      "name": "contractor_id",
      "description": "契約者通番  \nアクセストークン取得・再発行のレスポンスの契約者通番を設定。  \n",
      "required": true,
      "type": "string",
      "x-format": "英数字",
      "minLength": 32,
      "maxLength": 32
    },
    "autoManualModeQueryParam": {
      "in": "query",
      "name": "auto_manual_mode",
      "description": "自動手動モード  \n利用者の操作契機で電文の送信が行なわれる場合は「manual:手動」を設定し、   \nそれ以外の場合は「auto:自動」を設定  \n",
      "required": true,
      "type": "string",
      "x-format": "英字",
      "enum": [
        "auto",
        "manual"
      ]
    }
  },
  "definitions": {
    "400": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "about:blank",
          "description": "about:blank"
        },
        "title": {
          "type": "string",
          "example": "invalid_request",
          "description": "エラーコード"
        },
        "detail": {
          "type": "string",
          "example": "invalid parameters requested.",
          "description": "エラーメッセージ"
        }
      }
    },
    "403": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "about:blank",
          "description": "about:blank"
        },
        "title": {
          "type": "string",
          "example": "invalid_client",
          "description": "エラーコード"
        },
        "detail": {
          "type": "string",
          "example": null,
          "description": "エラーメッセージ"
        }
      }
    },
    "404": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "about:blank",
          "description": "about:blank"
        },
        "title": {
          "type": "string",
          "example": "invalid_client",
          "description": "エラーコード"
        },
        "detail": {
          "type": "string",
          "example": null,
          "description": "エラーメッセージ"
        }
      }
    },
    "500": {
      "type": "object",
      "properties": {
        "type": {
          "type": "string",
          "example": "about:blank",
          "description": "about:blank"
        },
        "title": {
          "type": "string",
          "example": "server_error",
          "description": "エラーコード"
        },
        "detail": {
          "type": "string",
          "example": "internal server error.",
          "description": "エラーメッセージ"
        }
      }
    },
    "BadRequestResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "invalid_request",
          "description": "エラーコード"
        },
        "error_description": {
          "type": "string",
          "example": "invalid parameters requested.",
          "description": "エラーメッセージ"
        }
      }
    },
    "ForbiddenResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "invalid_token",
          "description": "エラーコード"
        },
        "error_description": {
          "type": "string",
          "example": "access token is invalid.",
          "description": "エラーメッセージ"
        }
      }
    },
    "InternalServerErrorResponse": {
      "type": "object",
      "properties": {
        "error": {
          "type": "string",
          "example": "server_error",
          "description": "エラーコード"
        },
        "error_description": {
          "type": "string",
          "example": "internal server error.",
          "description": "エラーメッセージ"
        }
      }
    }
  }
}